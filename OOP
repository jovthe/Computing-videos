class Person:
  def __init__(self, name, age, height, weight, gender = 'Male'):
    #encapsulation
    self.__name = name
    self.__age = age
    self.__height = height
    self.__weight = weight
    self.__gender = gender

  def getName(self):
    return self.__name

  def getAge(self):
    return self.__age

  def setAge(self, newAge):
    #age can only increase
    if self.getAge() > newAge:
      print('Invalid')
    else:
      self.__age =  newAge

  def getHeight(self):
    return self.__height

  def setHeight(self, newHeight):
    self.__height = newHeight

  def getWeight(self):
    return self.__weight

  def setWeight(self, newWeight):
    self.__weight = newWeight

  def getGender(self):
    return self.__gender

  def display(self):
    print(f'Name: {self.__name}')
    print(f'Age: {self.__age}')
    print(f'Height: {self.__height}')
    print(f'Weight: {self.__weight}')
    print(f'Gender: {self.__gender}')

class Student(Person):
  def __init__(self, name, age, height, weight, classno, gender = 'Male'):
    #inheritance
    super().__init__(name, age, height, weight, gender)
    #additional attributes
    self.__class = classno
    self.__school = 'ABC school'

  def display(self):    #polymorphism
    print('Student')
    super().display() #accessing method from parent class

person1 = Person('John', 30, 170, 80)   #gender = male
student1 = Student('Alice', 20, 165, 60, 12, 'Female')

person1.display()
student1.display()

person1.setAge(31)
person1.display()

print(person1.getGender())
print(student1.getGender())
